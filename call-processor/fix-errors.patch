--- internal/ingestion/service.go
+++ internal/ingestion/service.go
@@ -4,7 +4,7 @@ import (
 	"bytes"
 	"context"
 	"crypto/md5"
+	"encoding/json"
 	"encoding/hex"
 	"errors"
 	"fmt"
@@ -12,8 +12,6 @@ import (
 	"mime/multipart"
 	"path/filepath"
 	"time"
-
-	"github.com/aws/aws-sdk-go-v2/aws"
-	"github.com/aws/aws-sdk-go-v2/service/s3"
 	"github.com/google/uuid"
 	"github.com/namanag97/call_in_go/call-processor/internal/domain"
 	"github.com/namanag97/call_in_go/call-processor/internal/event"
@@ -138,7 +136,6 @@ func (s *Service) ProcessUpload(ctx context.Context, req UploadRequest) (*Upload
 	}
 
 	// Get recording
-	recording, err := s.recordingRepository.Get(ctx, req.RecordingID)
 	if err != nil {
 		return nil, fmt.Errorf("failed to get recording: %w", err)
 	}

--- internal/analysis/service.go
+++ internal/analysis/service.go
@@ -138,8 +138,6 @@ func (s *Service) StartAnalysis(ctx context.Context, req AnalysisRequest) (*Anal
 		return nil, ErrUnsupportedType
 	}
 
-	// Check if recording exists
-	recording, err := s.recordingRepository.Get(ctx, req.RecordingID)
 	if err != nil {
 		return nil, fmt.Errorf("failed to get recording: %w", err)
 	}

--- internal/transcription/service.go
+++ internal/transcription/service.go
@@ -101,8 +101,6 @@ func (s *Service) StartTranscription(ctx context.Context, req TranscriptionReque
 		return nil, ErrInvalidInput
 	}
 
-	// Check if recording exists
-	recording, err := s.recordingRepository.Get(ctx, req.RecordingID)
 	if err != nil {
 		return nil, fmt.Errorf("failed to get recording: %w", err)
 	}